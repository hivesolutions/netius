from typing import Any, Callable

class Observable:
    events: dict[str, list[Callable[..., Any]]]

    def __init__(self, *args, **kwargs): ...
    def build(self) -> None: ...
    def destroy(self) -> None: ...
    def bind(
        self, name: str, method: Callable[..., Any], oneshot: bool = ...
    ) -> None: ...
    def unbind(self, name: str, method: Callable[..., Any] | None = ...) -> None: ...
    def unbind_all(self) -> None: ...
    def trigger(self, name: str, *args, **kwargs) -> None: ...
