import netius as netius
import netius.auth.base
import netius.auth.base as base

from typing import Dict

class MemoryAuth(netius.auth.base.Auth):
    def __init__(self, registry: Dict | None = ..., *args, **kwargs) -> None: ...
    @classmethod
    def auth(
        cls, username: str, password: str, registry: dict | None = ..., *args, **kwargs
    ): ...
    @classmethod
    def meta(cls, username: str, registry: Dict | None = ..., *args, **kwargs) -> Dict: ...
    @classmethod
    def get_registry(cls): ...
    @classmethod
    def load_registry(cls): ...
    def auth_i(self, username: str, password: str, *args, **kwargs) -> bool: ...
