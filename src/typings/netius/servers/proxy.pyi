"""
This type stub file was generated by pyright.
"""

from . import http2

__author__ = ...
__version__ = ...
__revision__ = ...
__date__ = ...
__copyright__ = ...
__license__ = ...
BUFFER_RATIO = ...
MIN_RATIO = ...
MAX_PENDING = ...
class ProxyConnection(http2.HTTP2Connection):
    def open(self, *args, **kwargs): # -> None:
        ...
    
    def resolve_encoding(self, parser): # -> None:
        ...
    
    def set_h2(self): # -> None:
        ...
    
    def on_headers(self): # -> None:
        ...
    
    def on_partial(self, data): # -> None:
        ...
    
    def on_available(self): # -> None:
        ...
    
    def on_unavailable(self): # -> None:
        ...
    


class ProxyServer(http2.HTTP2Server):
    def __init__(self, dynamic=..., throttle=..., trust_origin=..., max_pending=..., *args, **kwargs) -> None:
        ...
    
    def start(self): # -> None:
        ...
    
    def stop(self): # -> None:
        ...
    
    def cleanup(self): # -> None:
        ...
    
    def info_dict(self, full=...): # -> dict[str, str | Any]:
        ...
    
    def connections_dict(self, full=..., parent=...): # -> list[Any] | dict[Any, Any]:
        ...
    
    def connection_dict(self, id, full=...): # -> None:
        ...
    
    def on_data(self, connection, data): # -> None:
        ...
    
    def on_connection_d(self, connection): # -> None:
        ...
    
    def on_stream_d(self, stream): # -> None:
        ...
    
    def on_serve(self): # -> None:
        ...
    
    def on_data_http(self, connection, parser): # -> None:
        ...
    
    def on_headers(self, connection, parser): # -> None:
        ...
    
    def on_partial(self, connection, parser, data): # -> None:
        ...
    
    def on_available(self, connection, parser): # -> None:
        ...
    
    def on_unavailable(self, connection, parser): # -> None:
        ...
    
    def build_connection(self, socket, address, ssl=...): # -> ProxyConnection:
        ...
    


