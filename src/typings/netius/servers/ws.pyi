import netius as netius
import netius.base.conn
import netius.base.server
from typing import ClassVar

__version__: str
__revision__: str
__date__: str

class WSConnection(netius.base.conn.BaseConnection):
    def __init__(self, *args, **kwargs) -> None: ...
    def send_ws(self, data): ...
    def recv_ws(self, size: int = ...): ...
    def add_buffer(self, data): ...
    def get_buffer(self, delete: bool = ...): ...
    def do_handshake(self): ...
    def accept_key(self): ...

class WSServer(netius.base.server.StreamServer):
    MAGIC_VALUE: ClassVar[str] = ...
    def on_data(self, connection, data): ...
    def build_connection(self, socket, address, ssl: bool = ...): ...
    def send_ws(self, connection, data): ...
    def on_data_ws(self, connection, data): ...
    def on_handshake(self, connection): ...
    def _handshake_response(self, accept_key): ...
