import netius as netius

__version__: str
__revision__: str
__date__: str

class Stream:
    def open(self, mode: str = ...): ...
    def close(self): ...
    def seek(self, offset): ...
    def read(self, size): ...
    def write(self, data): ...
    def flish(self): ...

class FileStream(Stream):
    def __init__(self, path, size) -> None: ...
    def open(self, mode: str = ..., allocate: bool = ...): ...
    def close(self): ...
    def seek(self, offset): ...
    def read(self, size): ...
    def write(self, data): ...
    def flush(self): ...

class FilesStream(Stream):
    def __init__(self, dir_path, size, files_m) -> None: ...
    def open(self, mode: str = ..., allocate: bool = ...): ...
    def close(self): ...
    def seek(self, offset): ...
    def read(self, size): ...
    def write(self, data): ...
    def flush(self): ...
