"""
This type stub file was generated by pyright.
"""

__author__ = ...
__version__ = ...
__revision__ = ...
__date__ = ...
__copyright__ = ...
__license__ = ...
LINE_REGEX = ...
SPACE_REGEX = ...
HEADER_NAME_REGEX = ...
MIME_TYPES = ...
MIME_REGISTERED = ...
class Headers(list):
    """
    Mutable structure that allow the access to header tuples
    using both a list style strategy and a dictionary based
    strategy, providing easy manipulation of the items.

    The order of insertion is preserved so that it may be
    respected if a re-construction of the message is required.
    """
    def __getitem__(self, key):
        ...
    
    def __setitem__(self, key, value): # -> None:
        ...
    
    def __delitem__(self, key): # -> None:
        ...
    
    def __contains__(self, item): # -> bool:
        ...
    
    def item(self, key):
        ...
    
    def get(self, key, default=...): # -> None:
        ...
    
    def set(self, key, value, append=...): # -> None:
        ...
    
    def pop(self, key, default=...): # -> None:
        ...
    
    def join(self, separator=...): # -> bytes | str:
        ...
    


def rfc822_parse(message, strip=...): # -> tuple[Headers, bytes]:
    """
    Parse a message in rfc822 format. This format is similar to
    the mime one with only some small changes. The returning value
    for this function a set of dictionary tuples and the body of
    the processed message as a standard encoded string.

    :type message: String
    :param message: The message in rfc822 format, with both carriage
    return and line feed support.
    :type strip: bool
    :param strip: If the initial white spaces in the first header line
    should be removed and the proper abstract structure created with no
    extra space values (no strict representation). This should not be
    used when the strict representation of the headers is required
    (eg: for cryptographic signing purposes).
    :rtype: Tuple
    :return: Returns a tuple of headers and body where headers is
    a list of (name and value) pairs.
    """
    ...

def rfc822_join(headers, body):
    ...

def mime_register(): # -> None:
    ...

