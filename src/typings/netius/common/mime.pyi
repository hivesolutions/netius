import netius as netius
from _typeshed import Incomplete

__version__: str
__revision__: str
__date__: str
MIME_TYPES: tuple
MIME_REGISTERED: bool

class Headers(list):
    def __getitem__(self, key): ...
    def __setitem__(self, key, value) -> None: ...
    def __delitem__(self, key) -> None: ...
    def __contains__(self, item) -> bool: ...
    def item(self, key): ...
    def get(self, key, default: Incomplete | None = ...): ...
    def set(self, key, value, append: bool = ...): ...
    def pop(self, key, default: Incomplete | None = ...): ...
    def join(self, separator: str = ...): ...
    def _normalize(self, value): ...
def rfc822_parse(message, strip: bool = ...): ...
def rfc822_join(headers, body): ...
def mime_register(): ...
