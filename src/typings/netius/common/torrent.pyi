"""
This type stub file was generated by pyright.
"""

from . import parser

__author__ = ...
__version__ = ...
__revision__ = ...
__date__ = ...
__copyright__ = ...
__license__ = ...
HANDSHAKE_SIZE = ...
DECIMAL_REGEX = ...
TORRENT_TYPES = ...
def info_hash(root): # -> bytes:
    ...

def bencode(root): # -> bytes:
    ...

def bdecode(data): # -> dict[Any, Any] | list[Any] | int | LiteralString:
    ...

def chunk(item): # -> Generator[Any | _bytes | str, Any, None]:
    ...

def dechunk(chunks): # -> dict[Any, Any] | list[Any] | int | LiteralString:
    ...

class TorrentParser(parser.Parser):
    def __init__(self, owner, store=...) -> None:
        ...
    
    def build(self): # -> None:
        """
        Builds the initial set of states ordered according to
        their internal integer definitions, this method provides
        a fast and scalable way of parsing data.
        """
        ...
    
    def destroy(self): # -> None:
        """
        Destroys the current structure for the parser meaning that
        it's restored to the original values, this method should only
        be called on situation where no more parser usage is required.
        """
        ...
    
    def parse(self, data): # -> int | Any:
        """
        Parses the provided data chunk, changing the current
        state of the parser accordingly and returning the
        number of processed bytes from it.

        :type data: String
        :param data: The string containing the data to be parsed
        in the current parse operation.
        :rtype: int
        :return: The amount of bytes of the data string that have
        been "parsed" in the current parse operation.
        """
        ...
    


