"""
This type stub file was generated by pyright.
"""

__author__ = ...
__version__ = ...
__revision__ = ...
__date__ = ...
__copyright__ = ...
__license__ = ...
INTEGER = ...
BIT_STRING = ...
OCTET_STRING = ...
NULL = ...
OBJECT_IDENTIFIER = ...
SEQUENCE = ...
ASN1_OBJECT = ...
ASN1_RSA_PUBLIC_KEY = ...
ASN1_RSA_PRIVATE_KEY = ...
RSAID_PKCS1 = ...
HASHID_SHA1 = ...
HASHID_SHA256 = ...
def asn1_parse(template, data): # -> list[Any]:
    """
    Parse a data structure according to asn.1 template,
    the provided template should respect the predefined
    structure. The provided data is going to be validated
    against the template format and a exception raised in
    case the data is not conformant.

    :type template: List/Tuple
    :param template: A list of tuples comprising the asn.1 template.
    :type: List
    :param data: A list of bytes to parse.
    """
    ...

def asn1_length(length): # -> _bytes | str:
    """
    Returns a string representing a field length in asn.1 format.
    This value is computed taking into account the multiple byte
    representation of very large values.

    :type length: int
    :param length:The integer based length value that is going to
    be used in the conversion to a string representation.
    :rtype: String
    :return: The string based representation of the provided length
    integer value according to the asn.1 specification.
    """
    ...

def asn1_gen(node): # -> bytes:
    ...

def asn1_build(node): # -> Generator[Any, Any, None]:
    """
    Builds an asn.1 data structure based on pairs of (type, data),
    this function may be used as a generator of a buffer.

    :type node: Tuple
    :param node: The root node of the structure that is going to be
    used as reference for the generation of the asn.1 buffer.
    """
    ...

