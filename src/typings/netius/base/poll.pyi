from _typeshed import Incomplete

__version__: str
__revision__: str
__date__: str
POLL_TIMEOUT: float

class Poll:
    def __init__(self) -> None: ...
    @classmethod
    def name(cls): ...
    @classmethod
    def test(cls): ...
    def open(self, timeout: float = ...): ...
    def close(self): ...
    def poll(self): ...
    def poll_owner(self): ...
    def is_open(self): ...
    def is_edge(self): ...
    def is_empty(self): ...
    def sub_all(self, socket, owner: Incomplete | None = ...): ...
    def unsub_all(self, socket): ...
    def is_sub_read(self, socket): ...
    def is_sub_write(self, socket): ...
    def is_sub_error(self, socket): ...
    def sub_read(self, socket, owner: Incomplete | None = ...): ...
    def sub_write(self, socket, owner: Incomplete | None = ...): ...
    def sub_error(self, socket, owner: Incomplete | None = ...): ...
    def unsub_read(self, socket): ...
    def unsub_write(self, socket): ...
    def unsub_error(self, socket): ...

class EpollPoll(Poll):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def test(cls): ...
    def open(self, timeout: float = ...): ...
    def close(self): ...
    def poll(self): ...
    def is_edge(self): ...
    def sub_read(self, socket, owner: Incomplete | None = ...): ...
    def sub_write(self, socket, owner: Incomplete | None = ...): ...
    def sub_error(self, socket, owner: Incomplete | None = ...): ...
    def unsub_read(self, socket): ...
    def unsub_write(self, socket): ...
    def unsub_error(self, socket): ...

class KqueuePoll(Poll):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def test(cls): ...
    def open(self, timeout: float = ...): ...
    def close(self): ...
    def poll(self): ...
    def is_edge(self): ...
    def sub_read(self, socket, owner: Incomplete | None = ...): ...
    def sub_write(self, socket, owner: Incomplete | None = ...): ...
    def sub_error(self, socket, owner: Incomplete | None = ...): ...
    def unsub_read(self, socket): ...
    def unsub_write(self, socket): ...
    def unsub_error(self, socket): ...

class PollPoll(Poll):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def test(cls): ...
    def open(self, timeout: float = ...): ...
    def close(self): ...
    def poll(self): ...
    def is_edge(self): ...
    def sub_read(self, socket, owner: Incomplete | None = ...): ...
    def sub_write(self, socket, owner: Incomplete | None = ...): ...
    def sub_error(self, socket, owner: Incomplete | None = ...): ...
    def unsub_read(self, socket): ...
    def unsub_write(self, socket): ...
    def unsub_error(self, socket): ...

class SelectPoll(Poll):
    def __init__(self, *args, **kwargs) -> None: ...
    def open(self, timeout: float = ...): ...
    def close(self): ...
    def poll(self): ...
    def is_edge(self): ...
    def sub_read(self, socket, owner: Incomplete | None = ...): ...
    def sub_write(self, socket, owner: Incomplete | None = ...): ...
    def sub_error(self, socket, owner: Incomplete | None = ...): ...
    def unsub_read(self, socket): ...
    def unsub_write(self, socket): ...
    def unsub_error(self, socket): ...
