from _typeshed import Incomplete

__version__: str
__revision__: str
__date__: str

class NetiusError(Exception):
    def __init__(self, *args, **kwargs) -> None: ...
    def get_kwarg(self, name, default: Incomplete | None = ...): ...
    @property
    def uid(self): ...

class RuntimeError(NetiusError): ...
class StopError(RuntimeError): ...
class PauseError(RuntimeError): ...
class WakeupError(RuntimeError): ...
class DataError(RuntimeError): ...

class ParserError(RuntimeError):
    def __init__(self, *args, **kwargs) -> None: ...

class GeneratorError(RuntimeError): ...
class SecurityError(RuntimeError): ...
class NotImplemented(RuntimeError): ...
class AssertionError(RuntimeError): ...
