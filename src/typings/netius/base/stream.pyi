import netius.base.observer
import netius.base.observer as observer
from _typeshed import Incomplete

__version__: str
__revision__: str
__date__: str
OPEN: int
CLOSED: int
PENDING: int

class Stream(netius.base.observer.Observable):
    def __init__(self, owner: Incomplete | None = ...) -> None: ...
    def reset(self): ...
    def open(self): ...
    def close(self): ...
    def info_dict(self, full: bool = ...): ...
    def is_open(self): ...
    def is_closed(self): ...
    def is_pending(self): ...
