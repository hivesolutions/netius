"""
This type stub file was generated by pyright.
"""

from . import observer

__author__ = ...
__version__ = ...
__revision__ = ...
__date__ = ...
__copyright__ = ...
__license__ = ...
OPEN = ...
CLOSED = ...
PENDING = ...
class Stream(observer.Observable):
    """
    Abstract stream class responsible for the representation of
    a "virtual" connection state for situation where multiplexing
    of single connection exists (connections within connections)

    Most of the interface for a stream should be "logically" similar
    to the one defined by a connection.

    A good example of the stream usage is the HTTP2 protocol where
    multiple parallel streams co-exist within a single TCP connection
    allowing huge performance improvements.
    """
    def __init__(self, owner=...) -> None:
        ...
    
    def reset(self): # -> None:
        ...
    
    def open(self): # -> None:
        ...
    
    def close(self): # -> None:
        ...
    
    def info_dict(self, full=...): # -> dict[str, int]:
        ...
    
    def is_open(self): # -> bool:
        ...
    
    def is_closed(self): # -> bool:
        ...
    
    def is_pending(self): # -> bool:
        ...
    


