"""
This type stub file was generated by pyright.
"""

from . import observer

__author__ = ...
__version__ = ...
__revision__ = ...
__date__ = ...
__copyright__ = ...
__license__ = ...
class Agent(observer.Observable):
    """
    Top level class for the entry point classes of the multiple
    client and server protocol implementations.

    These classes should contain a series of utilities that facilitate
    the interaction with the Protocol, Event Loop and Transport
    objects (with the end developer in mind).

    Most of the interaction for a simple protocol should be implemented
    using static or class methods, avoiding internal object state and
    instantiation of the concrete Agent class.

    For complex protocols instantiation may be useful to provided extra
    flexibility and context for abstract operations.
    """
    @classmethod
    def cleanup_s(cls): # -> None:
        ...
    
    def cleanup(self, destroy=...): # -> None:
        ...
    
    def destroy(self): # -> None:
        ...
    


class ClientAgent(Agent):
    _clients = ...
    @classmethod
    def cleanup_s(cls): # -> None:
        ...
    
    @classmethod
    def get_client_s(cls, *args, **kwargs): # -> Self:
        ...
    


class ServerAgent(Agent):
    ...


