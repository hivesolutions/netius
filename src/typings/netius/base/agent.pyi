import netius.base.legacy as legacy
import netius.base.observer
import netius.base.observer as observer
from typing import ClassVar

__version__: str
__revision__: str
__date__: str

class Agent(netius.base.observer.Observable):
    @classmethod
    def cleanup_s(cls): ...
    def cleanup(self, destroy: bool = ...): ...
    def destroy(self): ...

class ClientAgent(Agent):
    _clients: ClassVar[dict] = ...
    @classmethod
    def cleanup_s(cls): ...
    @classmethod
    def get_client_s(cls, *args, **kwargs): ...

class ServerAgent(Agent): ...
