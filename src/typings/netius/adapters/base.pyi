"""
This type stub file was generated by pyright.
"""

__author__ = ...
__version__ = ...
__revision__ = ...
__date__ = ...
__copyright__ = ...
__license__ = ...
class BaseAdapter:
    """
    Top level abstract representation of a netius adapter.
    The adapter is responsible for the storage/retrieval
    of key based values, and may be used as the storage
    engine back-end for a series or purposes (eg: email
    storage, torrent hash table storage, sessions, etc.)
    """
    def set(self, value, owner=...): # -> None:
        ...
    
    def get(self, key): # -> str:
        ...
    
    def get_file(self, key, mode=...): # -> StringIO:
        ...
    
    def delete(self, key, owner=...): # -> None:
        ...
    
    def append(self, key, value): # -> None:
        ...
    
    def truncate(self, key, count): # -> None:
        ...
    
    def size(self, key): # -> Literal[0]:
        ...
    
    def sizes(self, owner=...): # -> list[int]:
        ...
    
    def total(self, owner=...): # -> int:
        ...
    
    def reserve(self, owner=...): # -> None:
        ...
    
    def count(self, owner=...): # -> Literal[0]:
        ...
    
    def list(self, owner=...): # -> tuple[()]:
        ...
    
    def generate(self): # -> str:
        ...
    


