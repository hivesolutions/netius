import netius as netius
from _typeshed import Incomplete

__version__: str
__revision__: str
__date__: str

class BaseAdapter:
    def set(self, value, owner: str = ...): ...
    def get(self, key): ...
    def get_file(self, key, mode: str = ...): ...
    def delete(self, key, owner: str = ...): ...
    def append(self, key, value): ...
    def truncate(self, key, count): ...
    def size(self, key): ...
    def sizes(self, owner: Incomplete | None = ...): ...
    def total(self, owner: Incomplete | None = ...): ...
    def reserve(self, owner: str = ...): ...
    def count(self, owner: Incomplete | None = ...): ...
    def list(self, owner: Incomplete | None = ...): ...
    def generate(self): ...
